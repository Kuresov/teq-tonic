///
/// Checks WCAG contrast ratio
/// @name wcag
/// @group wcag
/// @access private
/// @param {list} $values [null]
/// @param {map} $palette [null]
/// @example scss
///   $wcag-contrast: wcag-contrast($values, $palette);
/// @require {function} luminance
/// @require {function} review-hex
/// @require {function} wcag-contrast
///

@function wcag($values: null, $palette: null) {
	$color-name: nth($values, 1);
	$color-hex: get-hex($color-name, $palette);
	$color-luminance: null;
	$contrast-name: nth($values, 2);
	$contrast-hex: get-hex($contrast-name, $palette);
	$contrast-luminance: null;
	$wcag-contrast: null;

	// WCAG first pass
	@if $color-hex and $contrast-hex {
		$color-luminance: luminance($color-hex);
		$contrast-luminance: luminance($contrast-hex);
		$wcag-contrast: wcag-contrast($color-luminance, $contrast-luminance);
	}

	// WCAG 2
	@if $wcag-contrast < 4.5 {
		@if map-has-key($palette, $color-name) {
			$name-length: str-length($color-name);
			$trim-length: 0;

			// get cut length
			@for $i from 1 through 9 {
				$cut-at: str-index($color-name, "-#{$i}");

				@if $cut-at != null {
					$trim-length: $cut-at;
				}
			}

			// build color
			$color-group: str-slice($color-name, 1, $trim-length - 1);
			$color-shade: number(str-slice($color-name, $trim-length + 1, $name-length));

			// create new colors
			$new-color: null;
			$new-shade: null;
			$new-wcag-contrast: $wcag-contrast;

			// safety
			$timeout: 0;

			@while $new-wcag-contrast < 4.5 and $timeout < 10 {
				@if $color-luminance < $contrast-luminance {
					// increase color shade
					@if $color-shade == 900 {
						@return "You can't go any darker in color shades, maybe try `black`. Test failed.";
					} @else if $color-shade < 100 {
						$new-shade: inspect($color-shade + 50);
						$color-shade: $color-shade + 50;
					} @else {
						$new-shade: inspect($color-shade + 100);
						$color-shade: $color-shade + 100;
					}
				} @else {
					// decrease color shade
					@if $color-shade == 50 {
						@return "You can't go any lighter in color shades, maybe try `white`. Test failed.";
					} @else if $color-shade == 100 {
						$new-shade: inspect($color-shade - 50);
						$color-shade: $color-shade - 50;
					} @else {
						$new-shade: inspect($color-shade - 100);
						$color-shade: $color-shade - 100;
					}
				}

				// create color suggestion
				$new-color: get-hex($color-group + "-" + $new-shade, $palette);
				$new-luminance: luminance($new-color);
				$new-wcag-contrast: wcag-contrast($new-luminance, $contrast-luminance);

				$timeout: $timeout + 1;
			}

			@return "WCAG AA: `#{nth($values, 1)}` did not meet the proper contrast ratio. The closest valid color in the `#{$color-group}` palette is `#{$color-group}-#{$new-shade}`.";
		} @else {
			@return null;
		}
	} @else {
		@return null;
	}

	// // WCAG 3
	// @if $wcag < 7.1 {
	// 	@warn "WCAG AAA: Failed.";
	// }
}

///
/// Review hex from input.
/// @name review-hex
/// @group wcag
/// @access private
/// @param {color} $color [null] - Color to search for.
/// @param {map} $palette [null] - A palette of colors.
/// @example scss
///   get-hex("green-500")
///

@function review-hex($color: null, $palette: null) {
	@if map-has-key($palette, $color) {
		@return map-get($palette, $color);
	} @else {
		@if type-of($color) != "color" {
			@warn "No color name found in $_palette-default for '#{$color}' and it is not a color. Test failed.";
			@return null;
		}

		@return $color;
	}
}

///
/// WC3 contrast formula.
/// @name wcag
/// @group wcag
/// @access private
/// @param {number} $color-light
/// @param {number} $color-dark
/// @example scss
///   $wcag-contrast: wcag-contrast($color-luminance, $contrast-luminance);
///

@function wcag-contrast($color-1, $color-2) {
	$color-light: null;
	$color-dark: null;

	@if $color-1 < $color-2 {
		$color-light: $color-2;
		$color-dark: $color-1;
	} @else {
		$color-light: $color-1;
		$color-dark: $color-2;
	}

	// https://www.w3.org/TR/WCAG20/ - contrast ratio
	// (L1 + 0.5) / (L2 + 0.5)
	@return (($color-light + 0.05) / ($color-dark + 0.05));
}
