///
/// Gets hex value from a palette if it exists.
/// @name get-hex
/// @group wcag
/// @access private
/// @param {color} $colors [null] - Color to search for.
/// @param {map} $palette [null] - A palette of colors.
/// @example scss
///   get-hex("green-500")
///

@function get-hex($color: null, $palette: null) {
	@if map-has-key($palette, $color) {
		@return map-get($palette, $color);
	} @else {
		@if type-of($color) != "color" {
			@warn "No color name found in $_palette-default for '#{$color}' and it is not a color. Property omitted.";
			@return null;
		}

		@return $color;
	}
}

///
/// Returns wcag formula
/// @name wcag
/// @group wcag
/// @access private
/// @param {number} $color-light
/// @param {number} $color-dark
/// @example scss
///   $wcag: wcag($color-luminance, $contrast-luminance);
///

@function wcag($color-light, $color-dark) {
	@if $color-light < $color-dark {
		$color-light: $color-dark;
		$color-dark: $color-light;
	}

	// https://www.w3.org/TR/WCAG20/ - contrast ratio
	// (L1 + 0.5) / (L2 + 0.5)
	@return (($color-light + 0.05) / ($color-dark + 0.05));
}
